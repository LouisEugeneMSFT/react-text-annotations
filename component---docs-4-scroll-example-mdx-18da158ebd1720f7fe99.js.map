{"version":3,"sources":["webpack:///../docs/4-scroll-example.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","__position","__code","__scope","Playground","Props","Annotator","sampleLongText","sampleLongTextAnnotations","React","annotations","setAnnotations","relations","setRelations","text","onChangeAnnotations","onChangeRelations","options","scrollToFirstAnnotation","scrollToChar","isMDXComponent"],"mappings":"wTAWaA,EAAe,Q,iOAC5B,IAAMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,MAFDC,EAEC,EAFDA,WACGC,EACF,iBACD,OAAO,YAACJ,EAAD,eAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,kBACE,GAAM,kBADR,kBAGA,kGACA,sBACE,kBAAIC,WAAW,MAAf,4FACA,kBAAIA,WAAW,MAAf,6HAGF,YAAC,IAAD,CAAYC,WAAY,EAAGC,OAAQ,4gBAA6gBC,SAAO,GACrjBL,QACAH,kBACAS,eACAC,UACAC,cACAC,mBACAC,+BAPqjB,gBAQrjBb,IARqjB,EASrjBH,eATqjB,GAUpjBO,QAAQ,eACZ,WACK,IAKA,EAAsCU,WAAeD,KAA9CE,EAAP,KAAoBC,EAApB,KACA,EAAkCF,WAAe,IAA1CG,EAAP,KAAkBC,EAAlB,KACA,OAAO,YAAC,IAAD,CAAWC,KAAMP,IAAgBG,YAAaA,EAAaE,UAAWA,EAAWG,oBAAqBJ,EAAgBK,kBAAmBH,EAAcI,QAP9I,CACdC,yBAAyB,EACzBC,aAAc,MAKgKpB,QAAQ,uB,+NAOhMH,EAAWwB,gBAAiB","file":"component---docs-4-scroll-example-mdx-18da158ebd1720f7fe99.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/louiseugene/Code/HealthAI/react-text-annotations/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nimport { Playground, Props } from \"docz\";\nimport { Annotator } from \"../src/index.tsx\";\nimport { sampleLongText, sampleLongTextAnnotations } from \"../docs/samples.ts\";\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"scroll-example\"\n    }}>{`Scroll example`}</h1>\n    <p>{`You can ask the component to automatically scroll to a specific location:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`scrollToFirstAnnotation is a boolean that will pick the first annotation when it exists.`}</li>\n      <li parentName=\"ul\">{`scrollToChar maps to a specific character offset. It has priority over the previous parameter and can give more control.`}</li>\n    </ul>\n\n    <Playground __position={0} __code={'() => {\\n  const options = {\\n    scrollToFirstAnnotation: true,\\n    scrollToChar: null, // Try 2773 (the 2nd annotation)\\n  }\\n  const [annotations, setAnnotations] = React.useState(\\n    sampleLongTextAnnotations,\\n  )\\n  const [relations, setRelations] = React.useState([])\\n  return (\\n    <Annotator\\n      text={sampleLongText}\\n      annotations={annotations}\\n      relations={relations}\\n      onChangeAnnotations={setAnnotations}\\n      onChangeRelations={setRelations}\\n      options={options}\\n    />\\n  )\\n}'} __scope={{\n      props,\n      DefaultLayout,\n      Playground,\n      Props,\n      Annotator,\n      sampleLongText,\n      sampleLongTextAnnotations,\n      DefaultLayout,\n      _frontmatter\n    }} mdxType=\"Playground\">\n  {() => {\n        const options = {\n          scrollToFirstAnnotation: true,\n          scrollToChar: null // Try 2773 (the 2nd annotation)\n\n        };\n        const [annotations, setAnnotations] = React.useState(sampleLongTextAnnotations);\n        const [relations, setRelations] = React.useState([]);\n        return <Annotator text={sampleLongText} annotations={annotations} relations={relations} onChangeAnnotations={setAnnotations} onChangeRelations={setRelations} options={options} mdxType=\"Annotator\" />;\n      }}\n    </Playground>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}